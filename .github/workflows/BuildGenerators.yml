name: Build Generators project
on:
    push:
        paths:
        - 'Generator/**'
        tags:
        - 'v*'
        
jobs:
    build:
        env:
            PROJECT_NAME: AoCGen
        runs-on: ubuntu-latest
        strategy:
            matrix:
                build-target: [win-x64, linux-x64, osx-x64]
        steps:
        - uses: actions/checkout@v2
        - name: Setup .NET 5
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 5.*
        - name: Install dependencies
          run: dotnet restore
        - name: Build
          run: dotnet publish --configuration Release --no-restore --self-contained --runtime ${{ matrix.build-target }} --output "./build/${PROJECT_NAME}_${{ matrix.build-target }}"    
        - name: Zip binary
          id: zip_binary
          run: |
            cd ./build/
            zip -r "${PROJECT_NAME}_${{ matrix.build-target }}.zip" "${PROJECT_NAME}_${{ matrix.build-target }}"
            echo "::set-output name=binary_path::$(readlink -f ${PROJECT_NAME}_${{ matrix.build-target }}.zip)"
            echo "::set-output name=asset_name::${PROJECT_NAME}_${{ matrix.build-target }}"
        - uses: actions/upload-artifact@v2
          with:
            name: ${{ steps.zip_binary.outputs.asset_name }}
            path: ${{ steps.zip_binary.outputs.binary_path }}
    create-release:
        env:
            PROJECT_NAME: AocGen
        runs-on: ubuntu-latest
        needs: build
        steps:
        - uses: actions/download-artifact@v2
        - name: Create relase
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: ${{ github.ref }}
        - name: Upload win-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: etc/usr/artifacts/${PROJECT_NAME}_win-x64/${PROJECT_NAME}_win-x64.zip
            asset_name: ${PROJECT_NAME}_win-x64
            asset_content_type: application/zip
        - name: Upload linux-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: etc/usr/artifacts/${PROJECT_NAME}_win-x64/${PROJECT_NAME}_linux-x64.zip
            asset_name: ${PROJECT_NAME}_linux-x64
            asset_content_type: application/zip
        - name: Upload osx-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: etc/usr/artifacts/${PROJECT_NAME}_win-x64/${PROJECT_NAME}_osx-x64.zip
            asset_name: ${PROJECT_NAME}_osx-x64
            asset_content_type: application/zip
            