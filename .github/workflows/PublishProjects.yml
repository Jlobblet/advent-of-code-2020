name: Build Generators project
on:
    push:
        tags:
        - 'v*'
jobs:
    build:
        env:
            PROJECT_NAME: AoC2020
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Setup .NET 5
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 5.0.100
        - name: Install dependencies
          run: dotnet restore
        - name: Build projects
          run: dotnet build
        - name: Publish runner and generator
          run: |
            dotnet publish --configuration Release --runtime win-x64 -p:PublishTrimmed=true -o ~/win-x64/Runner Runner/Runner.fsproj
            dotnet publish --configuration Release --runtime win-x64 -p:PublishTrimmed=true -o ~/win-x64/Generator Generator/Generator.fsproj
            dotnet publish --configuration Release --runtime linux-x64 -p:PublishTrimmed=true -o ~/linux-x64/Runner Runner/Runner.fsproj
            dotnet publish --configuration Release --runtime linux-x64 -p:PublishTrimmed=true -o ~/linux-x64/Generator Generator/Generator.fsproj
            dotnet publish --configuration Release --runtime osx-x64 -p:PublishTrimmed=true -o ~/osx-x64/Runner Runner/Runner.fsproj
            dotnet publish --configuration Release --runtime osx-x64 -p:PublishTrimmed=true -o ~/osx-x64/Generator Generator/Generator.fsproj
        - name: Compress binaries
          run: |
            zip -r ${PROJECT_NAME}_win-x64.zip ~/win-x64/
            tar cf - ~/linux-x64/ | xz -z - > ~/${PROJECT_NAME}_linux-x64.tar.xz
            tar cf - ~/osx-x64/ | xz -z - > ~/${PROJECT_NAME}_osx-x64.tar.xz
        - name: Create release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: ${{ github.ref }}
        - name: Upload win-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: AoC2020_win-x64.zip
            asset_name: AoC2020_win-x64
            asset_content_type: application/zip
        - name: Upload linux-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: AoC2020_linux-x64.tar.xz
            asset_name: AoC2020_linux-x64
            asset_content_type: application/zip
        - name: Upload osx-x64
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: AoC2020_osx-x64.tar.xz
            asset_name: AoC2020_osx-x64
            asset_content_type: application/zip
            